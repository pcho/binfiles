#!/usr/bin/env bash

GO_VERSION="1.18"
NODE_VERSION="lts"

echo "Enter hostname:"
read -r HOSTNAME
echo "Enter Username:"
read -r USERNAME
echo "Enter IPv4 Address:"
read -r IPV4
echo "Enter IPv6 Address:"
read -r IPV6
echo "âœ” Done"

# Add password to default user
sudo passwd "$USERNAME"

# Link dotfiles
ln -sfv "$HOME/.dotfiles/.vim" ~
ln -sfv "$HOME/.dotfiles/.bin" ~
ln -sfv "$HOME/.dotfiles/.zshenv" ~
ln -sfv "$HOME/.dotfiles/.curlrc" ~
ln -sfv "$HOME/.dotfiles/.tmux.conf" ~
ln -sfv "$HOME/.dotfiles/.gitconfig" ~
ln -sfv "$HOME/.dotfiles/.dircolors" ~

# Make some dirs
mkdir "$HOME/.vim/undo"
mkdir "$HOME/.dev"

# Copy SSH settings
cp "$HOME/.dotfiles/.config/config" "$HOME/.ssh/"

# Update all packages and install essentials
sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install -y \
    build-essential \
    libgd-dev \
    libxslt-dev \
    libgeoip-dev \
    libssl-dev \
    ncurses-dev \
    libevent-dev \
    libpcre++-dev \
    python3-pip \
    python3-venv \
    ncdu \
    htop \
    fd-find \
    zsh \
    git \
    dialog \
    unzip \
    autogen \
    autoconf \
    libtool \
    bison \
    cmake \
    whois \
    protobuf-compiler \
    apt-transport-https \
    shellcheck \
    visidata \
    silversearcher-ag

# Change default shell to ZSH for user and root
chsh -s /usr/bin/zsh
sudo chsh -s /usr/bin/zsh

# Sets Timezone to EU/Berlin
export TZ='Europe/Berlin'
sudo ln -snf /usr/share/zoneinfo/"$TZ" /etc/localtime && sudo dpkg-reconfigure -f noninteractive tzdata

# Create host key
cd "$HOME" || return
ssh-keygen -t rsa \
    -b 4096 \
    -f ssh_host_key \
    -C '' \
    -N ''

# Configure SSH
sudo mv "$HOME"/ssh_host_key "$HOME"/ssh_host_key.pub /etc/ssh/
sudo chown root:root /etc/ssh/ssh_host_key /etc/ssh/ssh_host_key.pub
sudo chmod 0600 /etc/ssh/ssh_host_key
sudo cp ~/.dotfiles/.config/sshd_config /etc/ssh/
sudo service ssh restart

# Open ports
sudo ufw allow ssh
sudo ufw allow http
sudo ufw allow https
sudo ufw allow 60000:60005/udp
sudo ufw enable

# Generate dhparam cert
screen -d -m sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096

# Set hostname
sudo hostnamectl set-hostname "$HOSTNAME"

# Add IP Addresses to /etc/hosts
sudo sed -i '1 a '"$IPV4"' '"$HOSTNAME"'' /etc/hosts
sudo sed -i '2 a '"$IPV6"' '"$HOSTNAME"'' /etc/hosts

# Build mosh from source
git clone --depth=1 https://github.com/mobile-shell/mosh "$HOME"/mosh
cd "$HOME"/mosh || return
sh autogen.sh
./configure
make
sudo make install
cd "$HOME" || return
rm -rf "$HOME"/mosh

# Build TMUX
git clone --depth=1 https://github.com/tmux/tmux.git "$HOME"/tmux
cd "$HOME"/tmux || return
sh autogen.sh
./configure
make
sudo make install
cd ..
rm -rf "$HOME"/tmux

# Build tmux-mem-cpu-load plugin
git clone --depth=1 https://github.com/thewtex/tmux-mem-cpu-load "$HOME"/tmcl
cd "$HOME"/tmcl || return
cmake .
make
sudo make install
cd ..
rm -rf "$HOME"/tmcl

# Build VIM
git clone --depth=1 https://github.com/vim/vim.git "$HOME"/vim
cd "$HOME"/vim || return
./configure \
    --with-features=huge
make
sudo make install
cd && sudo rm -rfv "$HOME"/vim

# Install fzf
git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME"/.fzf
"$HOME"/.fzf/install

# Install Caddy
sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
curl -1sLf 'https://dl.cloudsmith.io/public/caddy/testing/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-testing.asc
curl -1sLf 'https://dl.cloudsmith.io/public/caddy/testing/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-testing.list
sudo apt-get update && sudo apt-get install -y caddy

# Install Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
sudo apt-get update && sudo apt-get install -y \
    docker-ce \
    docker-ce-cli \
    containerd.io

# Install Node
curl -fsSL https://deb.nodesource.com/setup_"$NODE_VERSION".x | sudo -E bash -
sudo apt-get update && sudo apt-get install -y nodejs

# Install Go
wget https://golang.org/dl/go"$GO_VERSION".linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go"$GO_VERSION".linux-amd64.tar.gz
sudo rm -rf go"$GO_VERSION".linux-amd64.tar.gz

# Cleanup bash files
rm -rf "$HOME"/.bashrc
rm -rf "$HOME"/.bash_history
rm -rf "$HOME"/.bash_logout
rm -rf "$HOME"/.profile

# Show host key
ssh-keygen -E sha256 -lf /etc/ssh/ssh_host_key.pub
